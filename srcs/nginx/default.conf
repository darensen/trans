server {
    listen 80;
    server_name _;
    return 301 https://$host:8443$request_uri;
}

server {
    listen       443 ssl;
    server_name  localhost;

    # Rate limiting & connections (leur conf)
    limit_req zone=general burst=20 nodelay;
    limit_conn perip 10;
    limit_conn perserver 100;

    # Blocages basiques via maps (leur conf)
    if ($malicious_request) { return 403; }
    if ($malicious_uri)     { return 403; }
    if ($malicious_body)    { return 403; }

    # Upload avatar (aligné côté WAF)
    client_max_body_size 200k;

    # TLS (certs dev auto-signés)
    ssl_certificate     /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;

    # HSTS (ok)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # === WAF ModSecurity + OWASP CRS ===
    modsecurity on;
    modsecurity_rules_file /etc/nginx/modsecurity/modsecurity.conf;

    # Front statique
    root   /usr/share/nginx/html;
    index  index.html index.htm;

    # Erreurs
    error_page 500 502 503 504 /50x.html;
    location = /50x.html { root /usr/share/nginx/html; }

    # API (leur conf) + rate-limit API
    location /api/ {
        limit_req zone=api burst=50 nodelay;

        if ($malicious_request) { return 403; }
        if ($malicious_body)    { return 403; }

        proxy_pass http://backend:3000;
        proxy_http_version 1.1;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WS/SSE éventuels sous /api/
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }

    # Avatars
    location /avatars/ {
        modsecurity off;  # Désactiver ModSecurity pour les avatars
        proxy_pass http://backend:3000/avatars/;
        proxy_http_version 1.1;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        add_header Cache-Control "public, max-age=60"; # avatars changent souvent
    }

    # WebSocket: Pong game (WSS)
    location /ws/pong {
        modsecurity off;  # evite les faux positifs handshake
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 60s;
        proxy_send_timeout 60s;
        proxy_pass http://websocket-pong:8081;
    }

    # WebSocket: Tournament (WSS)
    location /ws/tournament {
        modsecurity off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 60s;
        proxy_send_timeout 60s;
        proxy_pass http://websocket-tournament:8082;
    }

    # (Optionnel) Assets : pas de WAF, pas de fallback (perf + moins de FP)
    location ~* \.(?:js|css|png|jpg|jpeg|gif|svg|ico|woff2?)$ {
        modsecurity off;
        try_files $uri =404;
        access_log off;
        expires 7d;
        add_header Cache-Control "public";
    }

    # SPA fallback (en dernier)
    location / {
        try_files $uri $uri/ /index.html;
    }
}
