# Moteur WAF
SecRuleEngine On

# Inspection requête (réponse Off pour perf)
SecRequestBodyAccess On

# Limites (alignées avec Nginx : 200 kio / 128 kio)
SecRequestBodyLimit 200000
SecRequestBodyNoFilesLimit 131072

# Unicode map
SecUnicodeMapFile /etc/nginx/modsecurity/unicode.mapping 20127

# Journalisation WAF (JSON)
SecAuditEngine RelevantOnly
SecAuditLogFormat JSON
SecAuditLog /var/log/modsecurity/audit.log
SecAuditLogParts ABIJDEFHZ

# ======= CRS =======
Include /opt/owasp-crs/crs-setup.conf
Include /opt/owasp-crs/rules/*.conf

# ======= Règles locales =======

# Endpoints de santé et assets statiques
SecRule REQUEST_URI "@beginsWith /api/health" \
  "id:901000,phase:1,pass,log,ctl:ruleEngine=DetectionOnly"

SecRule REQUEST_URI "@rx \.(?:js|css|png|jpe?g|gif|svg|ico|woff2?)$" \
  "id:901005,phase:1,pass,log,ctl:ruleEngine=Off"

SecRule REQUEST_URI "@beginsWith /avatars/" \
  "id:901010,phase:1,pass,log,ctl:ruleEngine=Off"

# Endpoints d'authentification (critiques mais à surveiller)
SecRule REQUEST_URI "@streq /api/register" \
  "id:901011,phase:1,pass,log,ctl:ruleEngine=DetectionOnly"

SecRule REQUEST_URI "@streq /api/login" \
  "id:901012,phase:1,pass,log,ctl:ruleEngine=DetectionOnly"

SecRule REQUEST_URI "@streq /api/logout" \
  "id:901013,phase:1,pass,log,ctl:ruleEngine=DetectionOnly"

SecRule REQUEST_URI "@streq /api/ping" \
  "id:901014,phase:1,pass,log,ctl:ruleEngine=DetectionOnly"

# Endpoints utilisateur (profil) - Mode Off pour éviter les faux positifs
SecRule REQUEST_URI "@streq /api/me" \
  "id:901015,phase:1,pass,log,ctl:ruleEngine=Off"

SecRule REQUEST_URI "@streq /api/me/avatar" \
  "id:901016,phase:1,pass,log,ctl:ruleEngine=Off"

SecRule REQUEST_URI "@streq /api/me/export" \
  "id:901017,phase:1,pass,log,ctl:ruleEngine=DetectionOnly"

SecRule REQUEST_URI "@streq /api/me/anonymize" \
  "id:901018,phase:1,pass,log,ctl:ruleEngine=DetectionOnly"

# Exception pour les uploads multipart/form-data
SecRule REQUEST_HEADERS:Content-Type "@beginsWith multipart/form-data" \
  "id:901019,phase:1,pass,log,ctl:ruleEngine=Off"

# Endpoints de recherche et gestion d'utilisateurs
SecRule REQUEST_URI "@rx ^/api/user/[^/]+$" \
  "id:901021,phase:1,pass,log,ctl:ruleEngine=DetectionOnly"

# Endpoints d'amis
SecRule REQUEST_URI "@streq /api/friends" \
  "id:901022,phase:1,pass,log,ctl:ruleEngine=DetectionOnly"

SecRule REQUEST_URI "@streq /api/friends/requests" \
  "id:901023,phase:1,pass,log,ctl:ruleEngine=DetectionOnly"

SecRule REQUEST_URI "@rx ^/api/friends/[0-9]+$" \
  "id:901024,phase:1,pass,log,ctl:ruleEngine=DetectionOnly"

SecRule REQUEST_URI "@rx ^/api/friends/[0-9]+/accept$" \
  "id:901025,phase:1,pass,log,ctl:ruleEngine=DetectionOnly"

# Endpoints de matches
SecRule REQUEST_URI "@streq /api/matches" \
  "id:901026,phase:1,pass,log,ctl:ruleEngine=DetectionOnly"

SecRule REQUEST_URI "@streq /api/matches/history" \
  "id:901027,phase:1,pass,log,ctl:ruleEngine=DetectionOnly"

SecRule REQUEST_URI "@rx ^/api/matches/history/[0-9]+$" \
  "id:901028,phase:1,pass,log,ctl:ruleEngine=DetectionOnly"

# Endpoints 2FA
SecRule REQUEST_URI "@streq /api/2fa/enable" \
  "id:901031,phase:1,pass,log,ctl:ruleEngine=DetectionOnly"

SecRule REQUEST_URI "@streq /api/2fa/verify" \
  "id:901032,phase:1,pass,log,ctl:ruleEngine=DetectionOnly"

SecRule REQUEST_URI "@streq /api/2fa/disable" \
  "id:901033,phase:1,pass,log,ctl:ruleEngine=DetectionOnly"

# Méthodes HTTP autorisées (bloque le reste)
SecRule REQUEST_METHOD "!^(GET|HEAD|POST|PUT|DELETE|OPTIONS)$" \
  "id:901020,phase:1,deny,log,status:405,msg:'Méthode HTTP non autorisée'"
